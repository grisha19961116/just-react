{"version":3,"sources":["API/api.js","components/List/ListItem/ListItem.module.css","components/List/ListItem/ListItem.jsx","components/List/List.jsx","components/HomePage/HomePage.jsx"],"names":["axios","require","defaults","baseURL","params","api_key","fetchTrend","a","page","get","data","fetchSearch","search","fetchDetail","id","fetchCast","fetchReview","module","exports","ListItem","dataFetchTrend","path","useRouteMatch","length","map","elem","index","undefined","original_title","className","s","trend__list__item","trend__link__item","to","onClick","from","console","log","localStorage","setItem","trend__p","List","flagTrend","query","useState","dataList","setDataList","useEffect","dataTrend","results","error","gethTrend","dataSearch","gethSearch","trend__h1","trend__list","HomePage","saveQuery","setSaveQuery","getQuery","getItem"],"mappings":"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","file":"static/js/HomePage.bafeb53a.chunk.js","sourcesContent":["const axios = require('axios');\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst apiKey = '78f2432cb0b978404715fbeff43c36be';\n\naxios.defaults.params = {\n  api_key: apiKey,\n};\n\nconst fetchTrend = async (page = 1) => {\n  const { data } = await axios.get(`/trending/all/day?page=${page}`);\n  return data;\n};\n\nconst fetchSearch = async (search, page = 1) => {\n  const { data } = await axios.get(\n    `/search/movie?language=en-US&page=${page}&include_adult=false&query=${search}`,\n  );\n  return data;\n};\n\nconst fetchDetail = async id => {\n  const { data } = await axios.get(`/movie/${id}?language=en-US`);\n  return data;\n};\n\nconst fetchCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?language=en-US`);\n  return data;\n};\n\nconst fetchReview = async (id, page = 1) => {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?language=en-US&page=${page}`,\n  );\n  return data;\n};\n\nexport { fetchTrend, fetchSearch, fetchDetail, fetchCast, fetchReview };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trend__p\":\"ListItem_trend__p__2uwlK\",\"trend__list__item\":\"ListItem_trend__list__item__1j69k\",\"trend__link__item\":\"ListItem_trend__link__item__dapbm\"};","import s from './ListItem.module.css';\nimport React from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nconst ListItem = ({ dataFetchTrend }) => {\n  const { path } = useRouteMatch();\n  const setPrevList = from => {\n    console.log(from, `from we come`);\n    localStorage.setItem('path', from);\n  };\n\n  return dataFetchTrend.length > 0 ? (\n    dataFetchTrend.map((elem, index) => {\n      if (elem.original_title !== undefined) {\n        return (\n          <li key={index} className={s.trend__list__item}>\n            <Link\n              className={s.trend__link__item}\n              to={`/movies/${index}`}\n              onClick={() => setPrevList(path)}\n            >\n              {elem.original_title}\n            </Link>\n          </li>\n        );\n      }\n    })\n  ) : (\n    <p className={s.trend__p}>wait please...</p>\n  );\n};\nexport default ListItem;\n","import s from './ListItem/ListItem.module.css';\nimport { fetchTrend, fetchSearch } from '../../API/api';\nimport { useEffect, useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport ListItem from './ListItem/ListItem';\n\nconst List = ({ flagTrend, query }) => {\n  const [dataList, setDataList] = useState([]);\n\n  useEffect(() => {\n    async function gethTrend() {\n      try {\n        if (!flagTrend) {\n          return;\n        }\n        const dataTrend = await fetchTrend();\n        if (dataTrend === null || dataTrend.length === 0) {\n          return;\n        }\n        setDataList(dataTrend.results);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    gethTrend();\n  }, [flagTrend]);\n\n  useEffect(() => {\n    async function gethTrend() {\n      try {\n        const dataTrend = await fetchTrend();\n        if (dataTrend === null || dataTrend.length === 0) {\n          return;\n        }\n        setDataList(dataTrend.results);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    async function gethSearch() {\n      try {\n        const dataSearch = await fetchSearch(query);\n        if (dataSearch === null || dataSearch.length === 0) {\n          return;\n        }\n        setDataList(dataSearch.results);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    if (query === false && flagTrend === false) {\n      return gethTrend();\n    }\n\n    if (query !== false && flagTrend === false) {\n      return gethSearch();\n    }\n  }, [query, flagTrend]);\n\n  return (\n    <>\n      {flagTrend && <h1 className={s.trend__h1}>Trending today...</h1>}\n      {!flagTrend && !query && (\n        <h1 className={s.trend__h1}>\n          Trending today...We are in movies page i did it special,for preload...\n        </h1>\n      )}\n      <ul className={s.trend__list}>\n        <Route>\n          <ListItem dataFetchTrend={dataList} />\n        </Route>\n      </ul>\n    </>\n  );\n};\n\nexport default List;\n","import { useState, useEffect } from 'react';\nimport List from '../List/List';\n\nconst HomePage = () => {\n  const [saveQuery, setSaveQuery] = useState('');\n\n  useEffect(() => {\n    const getQuery = localStorage.getItem('query');\n    if (getQuery === null || getQuery === '') {\n      return setSaveQuery('');\n    }\n    setSaveQuery(getQuery);\n  }, []);\n\n  return (\n    <>\n      <List flagTrend={true} query={saveQuery !== '' && saveQuery} />\n    </>\n  );\n};\n\nexport default HomePage;\n"],"sourceRoot":""}