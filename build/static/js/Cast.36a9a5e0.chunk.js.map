{"version":3,"sources":["API/api.js","components/Cast/Cast.module.css","components/Cast/Cast.jsx"],"names":["axios","require","defaults","baseURL","params","api_key","fetchTrend","a","page","get","data","fetchSearch","search","fetchDetail","id","fetchCast","fetchReview","module","exports","Cast","useState","dataFetchCast","setDataFetchCast","useEffect","localStorage","getItem","dataCast","cast","console","error","gethCast","className","s","cast__list","map","profile_path","cast_id","character","name","cast__li","cast__img","alt","src","width","height","cast__h2","cast__3"],"mappings":"wTAAMA,EAAQC,EAAQ,IAEtBD,EAAME,SAASC,QAAU,+BAGzBH,EAAME,SAASE,OAAS,CACtBC,QAHa,oCAMf,IAAMC,EAAU,uCAAG,4CAAAC,EAAA,6DAAOC,EAAP,+BAAc,EAAd,SACMR,EAAMS,IAAN,iCAAoCD,IAD1C,uBACTE,EADS,EACTA,KADS,kBAEVA,GAFU,2CAAH,qDAKVC,EAAW,uCAAG,WAAOC,GAAP,+BAAAL,EAAA,6DAAeC,EAAf,+BAAsB,EAAtB,SACKR,EAAMS,IAAN,4CACgBD,EADhB,sCACkDI,IAFvD,uBACVF,EADU,EACVA,KADU,kBAIXA,GAJW,2CAAH,sDAOXG,EAAW,uCAAG,WAAMC,GAAN,iBAAAP,EAAA,sEACKP,EAAMS,IAAN,iBAAoBK,EAApB,oBADL,uBACVJ,EADU,EACVA,KADU,kBAEXA,GAFW,2CAAH,sDAKXK,EAAS,uCAAG,WAAMD,GAAN,iBAAAP,EAAA,sEACOP,EAAMS,IAAN,iBAAoBK,EAApB,4BADP,uBACRJ,EADQ,EACRA,KADQ,kBAETA,GAFS,2CAAH,sDAKTM,EAAW,uCAAG,WAAOF,GAAP,+BAAAP,EAAA,6DAAWC,EAAX,+BAAkB,EAAlB,SACKR,EAAMS,IAAN,iBACXK,EADW,wCACuBN,IAF5B,uBACVE,EADU,EACVA,KADU,kBAIXA,GAJW,2CAAH,uD,mBC9BjBO,EAAOC,QAAU,CAAC,WAAa,yBAAyB,SAAW,uBAAuB,UAAY,wBAAwB,SAAW,uBAAuB,QAAU,wB,mHCuC3JC,UApCf,WAAiB,IAAD,EAC4BC,mBAAS,IADrC,mBACPC,EADO,KACQC,EADR,KAed,OAbAC,qBAAU,WAAM,4CACd,8BAAAhB,EAAA,+EAEqBiB,aAAaC,QAAQ,cAF1C,cAEUX,EAFV,gBAG2BC,YAAUD,GAHrC,OAGUY,EAHV,OAIIJ,EAAiBI,EAASC,MAJ9B,kDAMIC,QAAQC,MAAR,MANJ,2DADc,uBAAC,WAAD,wBAUdC,KACC,IAGD,oBAAIC,UAAWC,IAAEC,WAAjB,SACGZ,GACCA,EAAca,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,KACrD,OACE,qBAAIP,UAAWC,IAAEO,SAAjB,UACE,qBACER,UAAWC,IAAEQ,UACbC,IAAKH,EACLI,IAAG,yCAAoCP,GACvCQ,MAAM,QACNC,OAAO,UAET,oBAAIb,UAAWC,IAAEa,SAAjB,SAA4BP,IAC5B,qBAAIP,UAAWC,IAAEc,QAAjB,yBAAuCT,OATTD","file":"static/js/Cast.36a9a5e0.chunk.js","sourcesContent":["const axios = require('axios');\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst apiKey = '78f2432cb0b978404715fbeff43c36be';\n\naxios.defaults.params = {\n  api_key: apiKey,\n};\n\nconst fetchTrend = async (page = 1) => {\n  const { data } = await axios.get(`/trending/all/day?page=${page}`);\n  return data;\n};\n\nconst fetchSearch = async (search, page = 1) => {\n  const { data } = await axios.get(\n    `/search/movie?language=en-US&page=${page}&include_adult=false&query=${search}`,\n  );\n  return data;\n};\n\nconst fetchDetail = async id => {\n  const { data } = await axios.get(`/movie/${id}?language=en-US`);\n  return data;\n};\n\nconst fetchCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?language=en-US`);\n  return data;\n};\n\nconst fetchReview = async (id, page = 1) => {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?language=en-US&page=${page}`,\n  );\n  return data;\n};\n\nexport { fetchTrend, fetchSearch, fetchDetail, fetchCast, fetchReview };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cast__list\":\"Cast_cast__list__1P4CN\",\"cast__li\":\"Cast_cast__li__1vCLj\",\"cast__img\":\"Cast_cast__img__2QPAJ\",\"cast__h2\":\"Cast_cast__h2__1rSh8\",\"cast__3\":\"Cast_cast__3__1Ms-t\"};","import s from './Cast.module.css';\nimport { fetchCast } from '../../API/api';\nimport { useEffect, useState } from 'react';\n\nfunction Cast() {\n  const [dataFetchCast, setDataFetchCast] = useState([]);\n  useEffect(() => {\n    async function gethCast() {\n      try {\n        const id = await localStorage.getItem('pathIdCast');\n        const dataCast = await fetchCast(id);\n        setDataFetchCast(dataCast.cast);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    gethCast();\n  }, []);\n\n  return (\n    <ul className={s.cast__list}>\n      {dataFetchCast &&\n        dataFetchCast.map(({ profile_path, cast_id, character, name }) => {\n          return (\n            <li className={s.cast__li} key={cast_id}>\n              <img\n                className={s.cast__img}\n                alt={name}\n                src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                width=\"300px\"\n                height=\"200px\"\n              />\n              <h2 className={s.cast__h2}>{name}</h2>\n              <h3 className={s.cast__3}>Character : {character}</h3>\n            </li>\n          );\n        })}\n    </ul>\n  );\n}\nexport default Cast;\n"],"sourceRoot":""}